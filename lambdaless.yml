# https://apimeister.com/2017/09/13/integrate-api-gateway-with-sns-using-cloudformation.html

AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  PhoneNumber:
    Type: String
  EmailAddress:
    Type: String

Resources:
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Twilio Forwarder2
      TopicName: TwilioForwarder2

  SNSSMSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref PhoneNumber
      Protocol: sms
      TopicArn: !Ref SNSTopic

  SNSEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref EmailAddress
      Protocol: email
      TopicArn: !Ref SNSTopic

  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name:
        Fn::Join:
          - ""
          - - !Ref AWS::StackName
            - "-api"

  GatewayRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: GatewayRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: "*"
            - Effect: Allow
              Action:
                - logs:PutLogEvents
                - logs:CreateLogGroup
                - logs:CreateLogStream
              Resource: "*"

  ApiGatewayPOSTMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        RequestTemplates:
          application/x-www-form-urlencoded:
            Fn::Join:
              - ""
              - - "#foreach( $token in $input.path('$').split('&') )##"
                - "\n#if( $token.split('=')[0] == 'Body' )##"
                - "\n#set( $messagetext = $token.split('=')[1] )##"
                - "\n#end##"
                - "\n#end##"
                - "\nAction=Publish&TopicArn=$util.urlEncode(\""
                - !Ref SNSTopic
                - "\")&Message=$messagetext"
                - "&Subject=$util.urlEncode('Message from Twilio')"
        Type: AWS
        Credentials:
          Fn::GetAtt: [ GatewayRole, Arn ]
        Uri:
          Fn::Join:
            - ""
            - - "arn:aws:apigateway:"
              - !Ref AWS::Region
              - ":sns:path//"
        IntegrationResponses:
          -
            StatusCode: 200
            ResponseTemplates:
              application/xml: |
                <?xml version="1.0" encoding="UTF-8"?>
                <Response>
                    <Message></Message>
                </Response>
      MethodResponses:
        -
          StatusCode: 200
          ResponseModels:
            application/xml: Empty
      ResourceId:
        Fn::GetAtt: [ ApiGatewayRestApi , RootResourceId ]
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ApiGatewayPOSTMethod
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      StageName: prod
