service: TwilioForwarder

provider: 
  name: aws
  runtime: python3.6
  region: ${self:custom.config.region}
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - logs:CreateLogGroup,
        - logs:PutRetentionPolicy,
        - logs:CreateLogStream,
        - logs:PutLogEvents,
        - logs:DescribeLogStreams,
        - logs:GetLogEvents
      Resource: 
        - arn:aws:logs:*:*:log-group:/aws/*
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource: 
        {"Ref": "SNSTopic"}

custom:
  config: ${file(${self:provider.stage}.yml), file(dev.yml)}

functions:
  Lambda:
    name: TwilioForwarder
    description: 
    handler: TwilioForwarder.lambda_handler
    environment: 
      snsArn: 
        {"Ref": "SNSTopic"}
    events:
      - http:
          path: test/TwilioForwarder
          method: POST
          integration: lambda
          response:
            headers:
              Content-Type: "'application/xml'"
            template: $input.path("$")
            statusCodes:
                200:
                    pattern: '' # Default response method
                    template:
                      # Your script returns json, so match it here
                      application/json: $input.path("$.body")
                    headers:
                      Content-Type: "'application/xml'"

resources:
  Resources:
    SNSTopic:
        Type: AWS::SNS::Topic
        Properties:
          DisplayName: Twilio Forwarder
          TopicName: TwilioForwarder

    SNSSMSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ${self:custom.config.phone_number}
        Protocol: sms
        TopicArn: {"Ref": "SNSTopic"}
    
    SNSEmailSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ${self:custom.config.email}
        Protocol: email
        TopicArn: {"Ref": "SNSTopic"}